type Query{
        users(query: String) : [User!]!
        me : User!
        posts(query: String) :[Post!]!
        comments: [Comment!]!
    }

    type Mutation{
        createUser(data : CreateUserInput!) : User!
        deleteUser(id : ID!): User!
        updateUser(id : ID!, data : updatedUserInput!): User!
        createPost(data : CreatePostInput!):Post!
        deletePost(id : ID!): Post!
        updatePost(id : ID! ,data : updatePostInput! ): Post!
        createComment(data : CreateCommentInput!): Comment!
        deleteComment(id : ID!): Comment!
        updateComment(id : ID!, data :updateCommentInput!) : Comment!
    }

    type Subscription{
        count : Int!
        comment(postId : ID!) : CommentSubscriptionPayload!
        post : PostSubscriptionPayload!
        

    }

    input CreateUserInput {
        name : String!
        email : String!
        age : Int
    }

    input updatePostInput{
        title : String ,
        body : String ,
        published : Boolean
    }

    input updatedUserInput{
        name : String,
        email : String,
        age : Int
    }

    input updateCommentInput {
        text : String
    }

    input CreatePostInput{
        title : String!
        body : String!
        published : Boolean!
        author : ID!
    }

    input CreateCommentInput{
        text : String! 
        author : ID! 
        post : ID!
    }
    type User{
        id : ID!
        name : String!
        email : String!
        age : Int
        post : [Post!]!
        comment : [Comment!]!
    }

    type Post{
        id : ID!
        title : String!
        body : String!
        published : Boolean!
        author : User!
        comments : [Comment!]!
    }

    type Comment{
        id : ID!
        text : String!
        author : User!
        post : Post!
    }

    type  PostSubscriptionPayload{
        mutation : String!
        data : Post!
    }

    type CommentSubscriptionPayload{
        mutation : String!
        data : Comment!
    }